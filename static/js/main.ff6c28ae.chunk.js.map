{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","makeReversed","isStarted","getStarted","NONE","sortType","setSortType","reordered","goods","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BR,SACEC,EACAH,EACAL,GAGA,IAAMS,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKT,EAASc,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKjB,EAASmB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAU7D,OAJIhB,GACFS,EAAaQ,UAGRR,EAQWS,CAChBrB,EACAQ,EACAL,GAGF,OAAKE,EAcH,sBAAKiB,UAAU,MAAf,UAEE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASc,UAFtC,iCAOA,wBACEU,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SAFtC,4BAOA,wBACEK,KAAK,SACLC,QAAS,kBAAMpB,GAAeD,IAFhC,qBAOA,wBACEoB,KAAK,SACLC,QAAS,WACPpB,GAAa,GACbK,EAAYV,EAASQ,OAJzB,mBAUA,oBAAIe,UAAU,QAAd,SACGZ,EAAUe,KAAI,SAAAC,GACb,OACE,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WAlDb,qBAAKJ,UAAU,MAAf,SACE,wBACEC,KAAK,SACLC,QAAS,kBAAMlB,GAAW,IAF5B,sBC5DRqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff6c28ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, makeReversed] = useState(false);\n  const [isStarted, getStarted] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reordered = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  if (!isStarted) {\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={() => getStarted(true)}\n        >\n          Start\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n\n      <button\n        type=\"button\"\n        onClick={() => setSortType(SortType.ALPABET)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => setSortType(SortType.LENGTH)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => makeReversed(!(isReversed))}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          makeReversed(false);\n          setSortType(SortType.NONE);\n        }}\n      >\n        Reset\n      </button>\n\n      <ul className=\"Goods\">\n        {reordered.map(good => {\n          return (\n            <li\n              className=\"Goods__item\"\n              key={good}\n            >\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}